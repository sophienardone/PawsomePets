@page "/dogbreeds"
@using PawsomePets.Components.Models;
@using PawsomePets.Components.Services;
@inject DogService DogService
@inject FavouritesService FavouritesService

<PageTitle>Dog Breeds</PageTitle>

<h1>Dog Breeds</h1>



@if (isLoading)
{
	<p>Loading dog breeds...</p>
}
else if (dogBreeds.Any())
{
	<div class="row">
		@foreach (var breed in dogBreeds)
		{
			<div class="col-md-4 mb-4">
				<div class="card">
					@if (breed.Image != null && !string.IsNullOrEmpty(breed.Image.Url))
					{
						<img src="@breed.Image.Url" class="card-img-top" alt="@breed.Name" style="height: 200px; object-fit: cover;">
					}
					<div class="card-body">
						<h5 class="card-title">@breed.Name</h5>
						<p class="card-text">@breed.Temperament</p>
						<p class="card-text"><strong>Life Span:</strong> @breed.Life_span</p>
						<p class="card-text"><strong>Bred For:</strong> @breed.bred_for</p>
						<p class="card-text"><strong>Breed Group:</strong> @breed.breed_group</p>
						@if (!string.IsNullOrEmpty(breed.Origin))
						{
							<p class="card-text"><strong>Origin:</strong> @breed.Origin</p>
						}
						<button class="btn" style="background-color: #4a0e4e; color: white;" @onclick="() => AddToFavourites(breed.Id.ToString())">Add to Favorites</button>

					</div>
				</div>
			</div>
		}
	</div>
}
else
{
	<p>No dogs found! Click the button to load breeds!</p>
}

@code {
	private List<DogBreed> dogBreeds = new List<DogBreed>();
	private bool isLoading = false;


	protected override async Task OnInitializedAsync()
	{
		await LoadDogs();
	}

	private async Task LoadDogs()
	{

		isLoading = true;
		dogBreeds = await DogService.GetDogBreedsAsync();
		isLoading = false;

	}

	private async Task AddToFavourites(string breedId)
	{
		await FavouritesService.AddToFavoritesAsync(breedId);
		Console.WriteLine($"{breedId} added to favourites!");
		
	}
}


